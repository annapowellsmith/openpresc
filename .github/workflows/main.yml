name: CI

on:
  push:

jobs:
  unit_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Retrieve Google Cloud credentials
        run: ./.github/scripts/decrypt_secret.sh
        env:
          GOOGLE_CLOUD_GITHUB_ACTIONS_PASSPHRASE: ${{ secrets.GOOGLE_CLOUD_GITHUB_ACTIONS_PASSPHRASE }}
      - name: Generate SAUCE_HOST
        run: |
          echo "::set-env name=SAUCE_HOST::$(ip -4 addr show scope global dev docker0 | grep inet | awk '{print $2}' | cut -d / -f 1)"
      # - name: Unit tests
      #   run: docker-compose run --service-ports test && docker-compose run --service-ports test-production
      #   env:
      #     TEST_SUITE: nonfunctional

  # Functional tests are failing on Travis too!
  #
  # functional_tests:
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Retrieve Google Cloud credentials
  #       run: ./.github/scripts/decrypt_secret.sh
  #       env:
  #         GOOGLE_CLOUD_GITHUB_ACTIONS_PASSPHRASE: ${{ secrets.GOOGLE_CLOUD_GITHUB_ACTIONS_PASSPHRASE }}
  #     - name: Generate SAUCE_HOST
  #       run: |
  #         echo "::set-env name=SAUCE_HOST::$(ip -4 addr show scope global dev docker0 | grep inet | awk '{print $2}' | cut -d / -f 1)"
  #     - name: Functional tests
  #       run: docker-compose run --service-ports test && docker-compose run --service-ports test-production
  #       env:
  #         TEST_SUITE: functional
  #         BROWSER: "internet explorer:11.0:Windows 7"

  ansible_buildout_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # - name: Ansible buildout test
      #   run: docker run -v ${GITHUB_WORKSPACE}:/openprescribing/ dockette/stretch /bin/bash -c "cd /openprescribing/ansible && bash test_playbook.sh"
      #   env:
      #     LANG: en_US.UTF-8

  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: "Linting"
        run: |
          pip install black==19.3b0
          pip install flake8==3.7.8
          scripts/lint.sh
      - name: Force failure
        run: false
      - name: Notify Slack
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              username: 'action-slack',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} succeeded in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      # - name: Slack notification Failure
      #   if: failure()
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #   uses: cemkiy/action-slacker@master
      #   with:
      #     channel: '#technoise'
      #     icon_url: 'https://slack-files2.s3-us-west-2.amazonaws.com/avatars/2017-07-20/215209949315_eb7b9d555efd1274773e_512.png'
      #     username: 'Github Actions - OpenPrescribing'
      #     text: 'Linting failed ${{ github.ref }}'
      #     fallback: 'Linting failed'

  notify_slack:
    runs-on: ubuntu-latest
    needs: [ unit_test , ansible_buildout_test, linting ]

    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              username: 'action-slack',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} succeeded in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
