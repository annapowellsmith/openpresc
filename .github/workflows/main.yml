name: CI

on:
  push:

jobs:
  unit_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Retrieve Google Cloud credentials
        run: ./.github/scripts/decrypt_secret.sh
        env:
          GOOGLE_CLOUD_GITHUB_ACTIONS_PASSPHRASE: ${{ secrets.GOOGLE_CLOUD_GITHUB_ACTIONS_PASSPHRASE }}
      - name: Generate SAUCE_HOST
        run: |
          echo "::set-env name=SAUCE_HOST::$(ip -4 addr show scope global dev docker0 | grep inet | awk '{print $2}' | cut -d / -f 1)"
      - name: Unit tests
        run: docker-compose run --service-ports test && docker-compose run --service-ports test-production
        env:
          TEST_SUITE: nonfunctional

  # Functional tests are failing on Travis too!
  #
  # functional_tests:
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Retrieve Google Cloud credentials
  #       run: ./.github/scripts/decrypt_secret.sh
  #       env:
  #         GOOGLE_CLOUD_GITHUB_ACTIONS_PASSPHRASE: ${{ secrets.GOOGLE_CLOUD_GITHUB_ACTIONS_PASSPHRASE }}
  #     - name: Generate SAUCE_HOST
  #       run: |
  #         echo "::set-env name=SAUCE_HOST::$(ip -4 addr show scope global dev docker0 | grep inet | awk '{print $2}' | cut -d / -f 1)"
  #     - name: Functional tests
  #       run: docker-compose run --service-ports test && docker-compose run --service-ports test-production
  #       env:
  #         TEST_SUITE: functional
  #         BROWSER: "internet explorer:11.0:Windows 7"

  ansible_buildout_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Ansible buildout test
        run: docker run -v ${GITHUB_WORKSPACE}:/openprescribing/ dockette/stretch /bin/bash -c "cd /openprescribing/ansible && bash test_playbook.sh"
        env:
          LANG: en_US.UTF-8

  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: "Linting"
        run: |
          pip install black==19.3b0
          pip install flake8==3.7.8
          scripts/lint.sh
