{
  "name": "Specials/imported products",
  "title": "Spend on specials/imported products per 1000 registered patients",
  "description": "Spend on specials/imported products per 1000 registered patients",
  "numerator_short": "Specials/imported product spend",
  "denominator_short": "List size",
  "y_label": "Spend on specials/imported products per 1000 registered patients",
  "why_it_matters": [
    "<p>The <a href='https://www.drugtariff.nhsbsa.nhs.uk/#/00875854-DC/DC00875504/Definitions%20-%20' target='_blank'>Drug Tariff provides the following definitions</a> for specials and imported products:</p>",
    "<p><b>Specials</b> are unlicensed medicinal products manufactured in the UK for human use which have been specially prepared to meet a prescription ordered for individual patients without the need for the manufacturer to hold a marketing authorisation for the medicinal product concerned.</p>",
    "<p><b>Imported products</b> are unlicensed medicinal products sourced from outside the UK under an importers licence issued by the MHRA. These products have been specially sourced to meet a prescription ordered for individual patients without the need for the importer to hold a marketing authorisation for the medicinal product concerned.</p>",
    "<p>Both special and imported products have not undergone the same rigorous regulatory requirements and should, therefore, only be used when an appropriate UK-licensed product is unavailable. In addition they are frequently more expensive than licensed alternatives.</p>"
  ],
  "tags": [
    "core"
  ],
  "url": null,
  "is_percentage": false,
  "is_cost_based": true,
  "low_is_good": true,
  "numerator_type": "bnf_cost",
  "numerator_bnf_codes_query": [
    "WITH aggregated_amps AS ( -- subquery to generate counts for each BNF code of specials/import products vs not for AMPs",
    "SELECT",
    " amp.bnf_code,",
    " SUM(CASE WHEN (amp.avail_restrict = 6 OR amp.avail_restrict = 4) THEN 1 ELSE 0 END) AS special_import_count, -- count where avail_restrict is either special or import",
    " SUM(CASE WHEN (amp.avail_restrict != 6 AND amp.avail_restrict != 9 AND amp.avail_restrict != 4) THEN 1 ELSE 0 END) AS non_special_non_import_count -- count where avail_restrict is not unavailable, not special and not import",
    "FROM",
    " `ebmdatalab.dmd.amp` AS amp",
    "WHERE",
    " amp.bnf_code IS NOT NULL",
    "GROUP BY",
    " amp.bnf_code",
    "),",
    "aggregated_vmps AS ( -- subquery to generate counts for each BNF code of specials/import products vs not for VMPs",
    "SELECT",
    " vmp.bnf_code,",
    " SUM(CASE WHEN (amp.avail_restrict = 6 OR amp.avail_restrict = 4) THEN 1 ELSE 0 END) AS special_import_count, -- count where avail_restrict is either special or import",
    " SUM(CASE WHEN (amp.avail_restrict != 6 AND amp.avail_restrict != 9 AND amp.avail_restrict != 4) THEN 1 ELSE 0 END) AS non_special_non_import_count, -- count where avail_restrict is not unavailable, special or import",
    "FROM",
    " `ebmdatalab.dmd.vmp` vmp",
    "LEFT JOIN",
    " `ebmdatalab.dmd.amp` amp",
    "ON",
    " vmp.id = amp.vmp",
    "WHERE",
    " vmp.bnf_code IS NOT NULL",
    "GROUP BY",
    " vmp.bnf_code",
    ")",
    "SELECT DISTINCT bnf_code",
    "FROM (",
    " SELECT bnf_code",
    " FROM aggregated_amps",
    " WHERE special_import_count > 0",
    " AND non_special_non_import_count = 0 -- select BNF codes which are associated only with specials/imports for AMPs",
    " UNION DISTINCT",
    " SELECT bnf_code",
    " FROM aggregated_vmps",
    " WHERE special_import_count > 0",
    " AND non_special_non_import_count = 0 -- select BNF codes which are associated only with specials/imports for VMPs",
    ") AS combined_results",
    "WHERE bnf_code NOT IN (",
    "SELECT DISTINCT bnf_code",
    "FROM aggregated_vmps",
    "WHERE special_import_count > 0",
    "AND non_special_non_import_count > 0 -- exclude anything where the VMP BNF codes are associated with none specials/imports",
    ");"
  ],
  "denominator_type": "list_size",
  "authored_by": "christopher.wood@phc.ox.ac.uk",
  "checked_by": "",
  "date_reviewed": "2025-01-14",
  "next_review": "",
  "measure_complexity": "medium",
  "measure_type": "custom",
  "radar_exclude": false
}
